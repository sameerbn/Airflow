from airflow.models import BaseOperator
from airflow.utils.decorators import apply_defaults
from adlfs import AzureBlobFileSystem
from airflow.exceptions import AirflowException

class CheckAzureFileOperator(BaseOperator):
    @apply_defaults
    def __init__(self, file_path, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.file_path = file_path
    
    def execute(self, context):
        abfs = AzureBlobFileSystem(account_name='your_account', account_key='your_key')
        azure_path = self.file_path.replace("azure://", "")
        
        if abfs.exists(azure_path):
            self.log.info(f"File {self.file_path} found in Azure Data Lake.")
            return True
        else:
            self.log.error(f"File {self.file_path} not found in Azure Data Lake.")
            raise AirflowException(f"File {self.file_path} not found!")
